#!/bin/bash
#
# NBAR processing job. 
#
# Usage:
#
# qsub \
#  -v L1T_PATH=...,OUTPUT_PATH=...,LOG_PATH=... \
#  -e <some_file_path>.stderr \
#  -o <some_file_path>.stdout \
#  -l walltime=...,ncpus=...,mem=...,jobfs=...\
#  run_FC.pbs
#
# Alternatively (and much easier), use
#
# ./submit_NBAR.sh
#
#=============================================================
# 
#PBS -P v10
#PBS -q express
#PBS -l walltime=01:30:00,ncpus=64,mem=124GB,jobfs=4GB
#PBS -l wd
#PBS -me
#===============================================================
umask 003
# CHECK PARAMS
# ============
echoerr() { echo "$@" 1>&2; }
checkExists() {
    if [[ -z "$2" ]]; then
       echoerr $1 not defined
       exit 1
    fi
    if [ ! -d $2 ]; then
       echoerr $1 $2 does not exist
       exit 1
    fi
}

checkExists L1T_PATH $L1T_PATH
checkExists OUTPUT_PATH $OUTPUT_PATH
checkExists LOG_PATH $LOG_PATH

# Debug resources
echo "NODES:"
cat $PBS_NODEFILE | uniq 
echo "CPUS: "
cat $PBS_NODEFILE | wc -l 

# now run on all nodes
NNODES=$(cat $PBS_NODEFILE | uniq | wc -l)

for i in $(seq 1 $NNODES); do
  pbsdsh -n $((16 *$i)) -- bash -l -c "module use /g/data/v10/private/modules/modulefiles; module load gaip/4.2.1; PBS_NNODES=$NNODES PBS_VNODENUM=$i nbar.py \
  --l1t_path ${L1T_PATH} \
  --out_path ${OUTPUT_PATH}  \
  --work_path ${OUTPUT_PATH}  \
  --cfg ${CFG_FILE} \
  --log_path ${LOG_PATH} \
  --debug" &
done;
wait
